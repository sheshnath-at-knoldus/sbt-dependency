<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven" xmlns:e="http://ant.apache.org/ivy/extra">
	<info organisation="com.azure"
		module="azure-client-sdk-parent"
		revision="1.7.0"
		status="release"
		publication="20191128052727"
	>
		<license name="The MIT License (MIT)" url="http://opensource.org/licenses/MIT" />
		<description homepage="https://github.com/Azure/azure-sdk-for-java">
		Parent POM for Microsoft Azure SDK for Java
		</description>
		<m:properties__site.url>https://azuresdkartifacts.blob.core.windows.net/azure-sdk-for-java</m:properties__site.url>
		<m:properties__build.context>azure-client-sdk-parent</m:properties__build.context>
		<m:properties__testMode>playback</m:properties__testMode>
		<m:properties__issues.url>https://github.com/Azure/azure-sdk-for-java/issues</m:properties__issues.url>
		<m:properties__legal>
      [INFO] Any downloads listed may be third party software.  Microsoft grants you no rights for third party software.</m:properties__legal>
		<m:properties__packageOutputDirectory>${project.build.directory}</m:properties__packageOutputDirectory>
		<m:properties__playbackServerPort>11080</m:properties__playbackServerPort>
		<e:sbtTransformHash>30c7c57c5e77c9f5caa052bac15d3f32a8281393</e:sbtTransformHash>
		<m:properties__alternativePlaybackServerPort>11081</m:properties__alternativePlaybackServerPort>
		<m:properties__project.build.sourceEncoding>UTF-8</m:properties__project.build.sourceEncoding>
		<m:maven.plugins>org.apache.maven.plugins__maven-compiler-plugin__3.8.1|org.apache.maven.plugins__maven-checkstyle-plugin__3.1.0|com.github.spotbugs__spotbugs-maven-plugin__3.1.12.2|org.codehaus.mojo__xml-maven-plugin__1.0|org.apache.maven.plugins__maven-jar-plugin__3.1.2|org.apache.maven.plugins__maven-javadoc-plugin__3.1.1|org.apache.maven.plugins__maven-source-plugin__3.0.1|org.apache.maven.plugins__maven-antrun-plugin__1.8|org.jacoco__jacoco-maven-plugin__0.8.4|org.codehaus.mojo__build-helper-maven-plugin__3.0.0</m:maven.plugins>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
	</publications>
	<dependencies>
		<dependency org="org.jacoco" name="org.jacoco.agent" rev="0.8.4" force="true" conf="test->runtime(*),master(compile)">
			<artifact name="org.jacoco.agent" type="jar" ext="jar" conf="" m:classifier="runtime"/>
		</dependency>
	</dependencies>
</ivy-module>
